- hosts: all
  become: yes
  become_method: sudo
  tasks:
  - name: Install aptitude, for better package management
    apt:
      name: aptitude
      state: latest
      update_cache: true

  - name: Update package cache
    apt: update_cache=yes force_apt_get=yes cache_valid_time=3600

  - name: Upgrade all packages
    apt: upgrade=dist force_apt_get=yes

  - name: Install required system packages
    apt:
      pkg:
        - unzip
        - git
        - fish
        - vim
        - ranger
        - apt-transport-https
        - ca-certificates
        - curl
        - software-properties-common
        - python3-pip
#        - python3-dev
        - virtualenv
        - python3-setuptools
      state: latest

  - name: Additional useful tools
    apt:
      pkg:
        - net-tools
        - jq
        - coreutils
      state: latest

  - name: Additional packages to support XNAT and other uses
    apt:
      pkg:
        - docker.io
        - docker-compose
      state: latest

  - name: Add MRH public key to root user
    ansible.posix.authorized_key:
      user: root
      state: present
      key: "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQDAIQ866HC6Pz0fP7dfFfcAfxZqQNL5bBMoixaZTqeXkdzm8bt6zbYy8Z46z3ekcmoZOTDhZa/RHkmNoMKglL6uIShLBAp1OhPggg6GfsbqUFrkQ4u+Az/JGS5R6G4pW/ih+5cnu6Qgv2I7u8h31/BxbEGPT4TiCYYkRrCOAzg1PN95HmLl0j9hcbpEP6KPIRSXhfTZsM+XUL6spTYj8AV03aW3hi5ELaA1LPGEhTfPg7+odbT3wurrCXfwD4RyEQzKqFMMcCsCu5TWGY7E+D1qZ8Gojxe6Esk4bssZUht6lW3pRmGZsGXe6nFWKmRrSkLaQgwlDvNGP49ozzBiU1kMfwel2dBBI6Zn/ePqkoAIO5IyHt8STXZ2y6i0RO7xSQA35GsD70bv9GUPop6Ai23hO+4GHk74j5n4+J0gbIe35nGiPmmiPT1wlP6ka8X4qaGLEupBC0odify+u6J2E20yKqA6zNB74KkdccPYIbzEd1zxx/N1PXfGKpyxQfAxr1eGG/CmEQHnLNCxyctovL+hA+2Luz9o02ANsc04XKvQU1UH9Nua4P4mA+ZoFb95kX+ADGfVb+rWtQI+Kkqcdx/SpAD4JuQtSpNjd0lQIWr+zI6rtx7hljcgFYSKw6lvdKRPnc8EcqqYqsGyGT/QEe+YitLW/UgnIFO3Fucgu6L/8Q== michael@ubuntu1804"

  - name: Create .netrc file
    ansible.builtin.copy:
      src: ./secrets/netrc
      dest: "~/.netrc"
      mode: '0600'
      force: no

  - name: Create a directory if it does not exist - /data/docker
    ansible.builtin.file:
      path: /data/docker
      state: directory
      mode: '0755'

  - name: Create a directory if it does not exist - /data/xnat
    ansible.builtin.file:
      path: /data/xnat
      state: directory
      mode: '0755'

  - name: Create a directory if it does not exist - /data/home
    ansible.builtin.file:
      path: /data/home
      state: directory
      mode: '0755'

  - name: Create a directory if it does not exist - /data/xnat/home/relay_tools
    ansible.builtin.file:
      path: /data/xnat/home/relay_tools
      state: directory
      mode: '0755'

  - name: Remove previous aspera_keys directory if it exists - /data/docker/xnat-docker-compose-cndarelay/xnat/aspera_keys
    ansible.builtin.file:
      state: absent
      path: /data/docker/xnat-docker-compose-cndarelay/xnat/aspera_keys

  - name: Remove previous relay_tools directory if it exists - /data/docker/xnat-docker-compose-cndarelay/xnat/relay_tools
    ansible.builtin.file:
      state: absent
      path: /data/docker/xnat-docker-compose-cndarelay/xnat/relay_tools

  - name: Checkout xnat-docker-compose-cndarelay
    ansible.builtin.git:
      repo: https://github.com/rcif-informatics/xnat-docker-compose-cndarelay.git
      dest: /data/docker/xnat-docker-compose-cndarelay
      single_branch: yes
      version: master
      depth: 1
      force: yes

#  - name: Create a directory if it does not exist - /data/docker/xnat-docker-compose-cndarelay/xnat/aspera_keys
#    ansible.builtin.file:
#      path: /data/docker/xnat-docker-compose-cndarelay/xnat/aspera_keys
#      state: directory
#      mode: '0755'

  - name: Create a directory if it does not exist - /data/docker/xnat-docker-compose-cndarelay/xnat/relay_tools
    ansible.builtin.file:
      path: /data/docker/xnat-docker-compose-cndarelay/xnat/relay_tools
      state: directory
      mode: '0755'

  - name: Copy cnda-relay env file
    ansible.builtin.copy:
      src: ./secrets/cndarelay.env
      dest: /data/docker/xnat-docker-compose-cndarelay/.env
      remote_src: no

  - name: Copy cnda-relay certificate
    ansible.builtin.copy:
      src: ./secrets/cndarelay-selfsigned.crt
      dest: /data/docker/xnat-docker-compose-cndarelay/nginx/cndarelay-selfsigned.crt
      mode: preserve
      remote_src: no

  - name: Copy cnda-relay certificate
    ansible.builtin.copy:
      src: ./secrets/cndarelay-selfsigned.key
      dest: /data/docker/xnat-docker-compose-cndarelay/nginx/cndarelay-selfsigned.key
      mode: preserve
      remote_src: no

  - name: Copy cnda-relay aspera private key (standard location)
    ansible.builtin.copy:
      src: ./secrets/cndarelay-ecdsa-key
      #dest: /data/docker/xnat-docker-compose-cndarelay/xnat/aspera_keys/cndarelay-ecdsa-key
      dest: /root/.ssh/cndarelay-ecdsa-key
      mode: preserve
      remote_src: no

  - name: Copy cnda-relay aspera private key (standard name, standard location)
    ansible.builtin.copy:
      src: ./secrets/cndarelay-ecdsa-key
      #dest: /data/docker/xnat-docker-compose-cndarelay/xnat/aspera_keys/cndarelay-ecdsa-key
      dest: /root/.ssh/id_ecdsa
      mode: preserve
      remote_src: no

  - name: Copy cnda-relay aspera public key (standard location)
    ansible.builtin.copy:
      src: ./secrets/cndarelay-ecdsa-key.pub
      #dest: /data/docker/xnat-docker-compose-cndarelay/xnat/aspera_keys/cndarelay-ecdsa-key.pub
      dest: /root/.ssh/cndarelay-ecdsa-key.pub
      mode: preserve
      remote_src: no

  - name: Copy start_docker.sh script (don't overwrite if exists)
    ansible.builtin.copy:
      src: ./tools/start_docker.sh
      #dest: /data/docker/xnat-docker-compose-cndarelay/xnat/aspera_keys/cndarelay-ecdsa-key
      dest: /root/start_docker.sh
      mode: preserve
      force: no
      remote_src: no

  - name: Copy mount_data.sh script (don't overwrite if exists)
    ansible.builtin.copy:
      src: ./tools/mount_data.sh
      #dest: /data/docker/xnat-docker-compose-cndarelay/xnat/aspera_keys/cndarelay-ecdsa-key
      dest: /root/mount_data.sh
      mode: preserve
      force: no
      remote_src: no

  - name: Copy start_all.sh script (don't overwrite if exists)
    ansible.builtin.copy:
      src: ./tools/start_all.sh
      #dest: /data/docker/xnat-docker-compose-cndarelay/xnat/aspera_keys/cndarelay-ecdsa-key
      dest: /root/start_all.sh
      mode: preserve
      force: no
      remote_src: no

  - name: Copy check_mount.sh script (don't overwrite if exists)
    ansible.builtin.copy:
      src: ./tools/check_mount.sh
      #dest: /data/docker/xnat-docker-compose-cndarelay/xnat/aspera_keys/cndarelay-ecdsa-key
      dest: /root/check_mount.sh
      mode: preserve
      force: no
      remote_src: no

  - name: Run check_mount.sh script to see if we should proceed
    ansible.builtin.shell:
      cmd: /root/check_mount.sh

  - name: Copy cnda-relay aspera public key (standard name, standard location)
    ansible.builtin.copy:
      src: ./secrets/cndarelay-ecdsa-key.pub
      #dest: /data/docker/xnat-docker-compose-cndarelay/xnat/aspera_keys/cndarelay-ecdsa-key.pub
      dest: /root/.ssh/id_ecdsa.pub
      mode: preserve
      remote_src: no

  - name: Copy aspera license
    ansible.builtin.copy:
      src: ./secrets/aspera-license
      dest: /data/docker/xnat-docker-compose-cndarelay/xnat/relay_tools/aspera-license
      mode: preserve
      remote_src: no

  - name: Set timezone
    ansible.builtin.shell:
      cmd: timedatectl set-timezone "`curl --fail https://ipapi.co/timezone`"

  - name: Setup reboot cron 
    ansible.builtin.cron:
      name: reboot_start_docker
      special_time: reboot
      job: "/data/docker/xnat-docker-compose-cndarelay/tools/start_docker.sh"

  - name: Setup hourly cron 
    ansible.builtin.cron:
      name: hourly_start_docker
      special_time: hourly
      job: "/data/docker/xnat-docker-compose-cndarelay/tools/start_docker.sh"

  - name: Setup daily cleanup cron 
    ansible.builtin.cron:
      name: daily_cleanup_relay
      special_time: daily
      job: "/data/docker/xnat-docker-compose-cndarelay/tools/cleanup_relay.sh"

  - name: Run startup script (restart)
    ansible.builtin.shell:
      cmd: /data/docker/xnat-docker-compose-cndarelay/tools/start_docker.sh --restart

